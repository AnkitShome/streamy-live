// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider = "mongodb"
   url      = env("DATABASE_URL")
}

model User {
   id          String  @id @default(auto()) @map("_id") @db.ObjectId
   username    String  @unique
   imageUrl    String?
   clerkUserId String  @unique
   bio         String?

   stream Stream?

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
   streamId  String?  @db.ObjectId
}

model Stream {
   id           String  @id @default(auto()) @map("_id") @db.ObjectId
   title        String
   thumbnailUrl String?

   ingressId String? @unique
   serverUrl String?
   streamKey String?

   isLive              Boolean @default(false)
   isChatEnabled       Boolean @default(true)
   isChatDelayed       Boolean @default(false)
   isChatFollowersOnly Boolean @default(false)

   userId String @unique @db.ObjectId

   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model Follow {
   id          String   @id @default(auto()) @map("_id") @db.ObjectId
   followerId  String
   followingId String
   createdAt   DateTime @default(now())
   updatedAt   DateTime @updatedAt

   @@unique([followerId, followingId])
   @@index([followerId])
   @@index([followingId])
}

model ChatMessage {
   id        String   @id @default(auto()) @map("_id") @db.ObjectId
   roomId    String //streamer's userId or streamId
   userId    String //sender
   content   String
   createdAt DateTime @default(now())
   deleted   Boolean  @default(false)

   @@index([roomId])
}

model Ban {
   id        String    @id @default(auto()) @map("_id") @db.ObjectId
   userId    String //banned user
   roomId    String //stream or channel
   bannedBy  String //moderator/host who banned
   reason    String?
   expiresAt DateTime? //permanent bans optional
   createdAt DateTime  @default(now())

   @@index([userId, roomId])
}
